let reduce: (int -> int -> int) -> int -> int -> int = fn g: int -> int -> int, b: int, k: int => {
    if (k == 0) {
        b
    } else {
        g(k)(reduce(g)(b)(k - 1))
    }
};
let tri = reduce(fn n: int, p: int => { println(n + p) })(1);
tri(100);;
